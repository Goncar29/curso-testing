name: API CI

#on: [push] (esto haria push cuando hicieramos cambios)
on:
  push: #haremos push cuando realicemos cambios en la carpeta api y api.ci.yml
    paths:
      - "./api/**"
      - ".github/workflows/api-ci.yml"

defaults:
  run:
    working-directory: ./api

jobs: # esto es la forma que ve github para automatizar
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: ./api/package-lock.json
      - name: install
        shell: bash
        run: npm ci
      - name: run linter
        shell: bash
        run: npm run lint
  unit-test: # este sera el nombre que le pongamos
    runs-on: ubuntu-latest # aqui le decimos en que maquina corra
    steps: # pasos a seguir
      - name: Checkout # rama en la que trabajara
        uses: actions/checkout@v2 # este es un comando que tiene github actions para hacer esta parte de la clonacion
      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with: # que necesitara node
          node-version: 20
          cache: "npm"
          cache-dependency-path: ./api/package-lock.json
      - name: install # instalaciones que necesitarea
        shell: bash # terminal para que corra el siguiente comando en run
        run: npm ci # instala una dependencia de integracion continua
      - name: run unit test
        shell: bash # terminal para que corra el siguiente comando en run
        run: npm run test # va a correr el test
  e2e: # aqui corremos nuestras pruebas e2e
    runs-on: ubuntu-latest
    container: # contenedor para correr nuestro servivio de node
      image: node:16

    services: # este seria nuestro contenedor para nuestra BD
      mongo-e2e:
        image: mongo:4.4
        ports:
          - 27017:27017
    env:
      MONGO_INITDB_ROOT_USERNAME: test
      MONGO_INITDB_ROOT_PASSWORD: test123

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: install
        shell: bash
        run: npm ci
      - name: run e2e
        shell: bash
        run: npm run test:e2e
        env:
          MONGO_DB_NAME: demo
          MONGO_URL: mongodb://test:test123@mongo-e2e:27017?retryWrites=true&writeConcern=majority
